[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --capture=no
    --alluredir=allure-results
    --clean-alluredir
    --continue-on-collection-errors
    --maxfail=5
    --durations=10

# Markers
markers =
    smoke: Smoke tests - critical functionality
    regression: Regression tests - full test suite
    login: Tests related to login functionality
    registration: Tests related to user registration
    navigation: Tests related to site navigation
    ui: User interface tests
    api: API integration tests
    slow: Tests that take longer than usual
    skip_ci: Skip in CI environment
    
# Filtering options
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    
# Test output
console_output_style = progress
junit_family = xunit2

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test-reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (if pytest-timeout is installed)
timeout = 300
timeout_method = thread